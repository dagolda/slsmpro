<?php

namespace Bo\AdminBundle\Repository;

/**
 * AdvisorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvisorRepository extends \Doctrine\ORM\EntityRepository
{
	public function getTotal(){
		$query = $this->_em->createQuery('SELECT COUNT(a) From BoAdminBundle:Advisors a');
		return (int) $query->getSingleScalarResult();
	}
	public function getList(){
		return $this->_em->getRepository('BoAdminBundle:Advisors')->findBy(array(),array('id' => 'desc'));
	}
	public function search($sTexte){
		$aTexte = explode(" ",$sTexte);
		$sSelect = "SELECT v FROM Bo\AdminBundle\Entity\Advisors v  JOIN v.advisor u WHERE u.name like :motcle or u.email like :motcle or u.firstname like :motcle or u.homenumber like :motcle or u.cellnumber like :motcle or u.address1 like :motcle";
		$oQuery =  $this->_em->createQuery($sSelect);	
		$oQuery->setParameters(array(
			'motcle' => "%".$sTexte."%",
		));	
		$aResult = $oQuery->getResult();
		return $aResult;
	}
	public function getContracts($advisor){
		return $this->_em->getRepository('BoAdminBundle:Contracts')->findBy(array('advisor'=>$advisor,'status'=>1),array('id' => 'desc'));
	}
	public function getGroup($advisor){
		return $this->_em->getRepository('BoAdminBundle:Group')->findBy(array('advisor'=>$advisor,'status'=>1),array('id' => 'desc'));
	}
	//Get teachers who are on contracts for the advisor given in parameter
	public function getContractTeachers($advisor){
		$aTeachers = array();
		$aContracts = $this->getContracts($advisor);
		foreach($aContracts as $oContract){
			$aEmployees = $oContract->getEmployee();
			foreach($aEmployees as $oEmployee){
				if(isset($aTeachers[$oEmployee->getId()])) continue;
				$aTeachers[$oEmployee->getId()] = $oEmployee;
			}
		}
		return $aTeachers;
	}
	//Get teachers who are on groups for the advisor given in parameter
	public function getGroupTeachers($advisor){
		$aTeachers = array();
		$aGroup = $this->getGroup($advisor);
		foreach($aGroup as $oGroup){
			$aEmployees = $oGroup->getEmployee();
			foreach($aEmployees as $oEmployee){
				if(isset($aTeachers[$oEmployee->getId()])) continue;
				$aTeachers[$oEmployee->getId()] = $oEmployee;
			}
		}
		return $aTeachers;
	}
	//Get teacher from contracts and from groups
	public function getAllTeachers($advisor){
		$aTeachers = $this->getContractTeachers($advisor);
		$aGroup = $this->getGroup($advisor);
		foreach($aGroup as $oGroup){
			$aEmployees = $oGroup->getEmployee();
			foreach($aEmployees as $oEmployee){
				if(isset($aTeachers[$oEmployee->getId()])) continue;
				$aTeachers[$oEmployee->getId()] = $oEmployee;
			}
		}
		return $aTeachers;		
	}
}
