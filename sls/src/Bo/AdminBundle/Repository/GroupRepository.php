<?php

namespace Bo\AdminBundle\Repository;

/**
 * GroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GroupRepository extends \Doctrine\ORM\EntityRepository
{
	public function getTotal(){
		$query = $this->_em->createQuery('SELECT COUNT(a) From BoAdminBundle:Group a');
		return (int) $query->getSingleScalarResult();
	}
	public function search($sTexte){
		$aTexte = explode(" ",$sTexte);
		$oEmExp = $this->_em->getRepository('BoAdminBundle:Group');
		$oResult = $oEmExp->find($sTexte);
		if($oResult) return array($oResult);
		$aResult = $oEmExp->findBy(array('name'=>$sTexte),array('id' => 'desc'));
		if(isset($aResult[0])) return $aResult;
		$sSelect = "SELECT v FROM Bo\AdminBundle\Entity\Group v  WHERE v.name like :motcle or v.targetlevel like :motcle";
		$oQuery =  $this->_em->createQuery($sSelect);	
		$oQuery->setParameters(array(
			'motcle' => "%".$sTexte."%",
		));	
		$aResult = $oQuery->getResult();
		return $aResult;
	}
	public function getEmployeeGroup($employee){
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
			->from('BoAdminBundle:Group', 'a')
			->join('a.employee', 'b')
			->where("b.id =:idemployee" )
			->setParameter('idemployee',$employee->getId());
		$query = $qb->getQuery();
		return $query->getResult();				
	}
	public function getByLocal($local){
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
			->from('BoAdminBundle:Group', 'a')
			->join('a.local', 'b')
			->where("b.id =:idlocal" )
			->setParameter('idlocal',$local->getId());
		$query = $qb->getQuery();
		return $query->getResult();				
	}
	public function getTodayGroup(){
		$today=date("Y-m-d");
		$today = date("Y-m-d");
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
			->from('BoAdminBundle:Group', 'a')
			->join('a.local', 'b')
			->join('a.employee', 'c')
			->where("a.status=:status and a.startdate <=:today and a.enddate >=:today" )
			->setParameters(array('status'=>1,'today'=>$today));
		$query = $qb->getQuery();
		$aResult = $query->getResult();	
		return $aResult;				
	}
	public function getByType($typecontract){
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
			->from('BoAdminBundle:Group', 'a')
			->join('a.typecontract', 'b')
			->where("b.id =:idtype" )
			->setParameter('idtype',$typecontract->getId());
		$query = $qb->getQuery();
		return $query->getResult();				
	}
}
