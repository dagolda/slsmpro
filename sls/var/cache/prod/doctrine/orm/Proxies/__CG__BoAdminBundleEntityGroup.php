<?php

namespace Proxies\__CG__\Bo\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Group extends \Bo\AdminBundle\Entity\Group implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'id', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'name', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'startdate', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'enddate', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'employee', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'local', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'students', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'agenda', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'contracts', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'training', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'advisor', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'targetlevel', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'typecontract', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'closegroup', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'status', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'usedhours', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'dateusedhour', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'createby', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'creationdate'];
        }

        return ['__isInitialized__', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'id', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'name', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'startdate', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'enddate', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'employee', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'local', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'students', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'agenda', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'contracts', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'training', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'advisor', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'targetlevel', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'typecontract', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'closegroup', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'status', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'usedhours', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'dateusedhour', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'createby', '' . "\0" . 'Bo\\AdminBundle\\Entity\\Group' . "\0" . 'creationdate'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Group $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setTargetlevel($targetlevel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTargetlevel', [$targetlevel]);

        return parent::setTargetlevel($targetlevel);
    }

    /**
     * {@inheritDoc}
     */
    public function getTargetlevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTargetlevel', []);

        return parent::getTargetlevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationdate($creationdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationdate', [$creationdate]);

        return parent::setCreationdate($creationdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationdate', []);

        return parent::getCreationdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartdate($startdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartdate', [$startdate]);

        return parent::setStartdate($startdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartdate', []);

        return parent::getStartdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnddate($enddate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnddate', [$enddate]);

        return parent::setEnddate($enddate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnddate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnddate', []);

        return parent::getEnddate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateby($createby)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateby', [$createby]);

        return parent::setCreateby($createby);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateby()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateby', []);

        return parent::getCreateby();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmployee(\Bo\AdminBundle\Entity\Employee $employee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmployee', [$employee]);

        return parent::addEmployee($employee);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmployee(\Bo\AdminBundle\Entity\Employee $employee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmployee', [$employee]);

        return parent::removeEmployee($employee);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployee', []);

        return parent::getEmployee();
    }

    /**
     * {@inheritDoc}
     */
    public function addLocal(\Bo\AdminBundle\Entity\Local $local)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLocal', [$local]);

        return parent::addLocal($local);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLocal(\Bo\AdminBundle\Entity\Local $local)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLocal', [$local]);

        return parent::removeLocal($local);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocal', []);

        return parent::getLocal();
    }

    /**
     * {@inheritDoc}
     */
    public function addStudent(\Bo\AdminBundle\Entity\Students $student)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStudent', [$student]);

        return parent::addStudent($student);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStudent(\Bo\AdminBundle\Entity\Students $student)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStudent', [$student]);

        return parent::removeStudent($student);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudents', []);

        return parent::getStudents();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdvisor(\Bo\AdminBundle\Entity\Employee $advisor = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdvisor', [$advisor]);

        return parent::setAdvisor($advisor);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdvisor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdvisor', []);

        return parent::getAdvisor();
    }

    /**
     * {@inheritDoc}
     */
    public function addTraining(\Bo\AdminBundle\Entity\Training $training)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTraining', [$training]);

        return parent::addTraining($training);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTraining(\Bo\AdminBundle\Entity\Training $training)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTraining', [$training]);

        return parent::removeTraining($training);
    }

    /**
     * {@inheritDoc}
     */
    public function getTraining()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTraining', []);

        return parent::getTraining();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypecontract(\Bo\AdminBundle\Entity\Typecontract $typecontract = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypecontract', [$typecontract]);

        return parent::setTypecontract($typecontract);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypecontract()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypecontract', []);

        return parent::getTypecontract();
    }

    /**
     * {@inheritDoc}
     */
    public function addAgenda(\Bo\AdminBundle\Entity\Agenda $agenda)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAgenda', [$agenda]);

        return parent::addAgenda($agenda);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAgenda(\Bo\AdminBundle\Entity\Agenda $agenda)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAgenda', [$agenda]);

        return parent::removeAgenda($agenda);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgenda()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgenda', []);

        return parent::getAgenda();
    }

    /**
     * {@inheritDoc}
     */
    public function addContract(\Bo\AdminBundle\Entity\Contracts $contract)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContract', [$contract]);

        return parent::addContract($contract);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContract(\Bo\AdminBundle\Entity\Contracts $contract)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContract', [$contract]);

        return parent::removeContract($contract);
    }

    /**
     * {@inheritDoc}
     */
    public function getContracts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContracts', []);

        return parent::getContracts();
    }

    /**
     * {@inheritDoc}
     */
    public function addClosegroup(\Bo\AdminBundle\Entity\Closegroup $closegroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClosegroup', [$closegroup]);

        return parent::addClosegroup($closegroup);
    }

    /**
     * {@inheritDoc}
     */
    public function removeClosegroup(\Bo\AdminBundle\Entity\Closegroup $closegroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeClosegroup', [$closegroup]);

        return parent::removeClosegroup($closegroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getClosegroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClosegroup', []);

        return parent::getClosegroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsedhours($usedhours)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsedhours', [$usedhours]);

        return parent::setUsedhours($usedhours);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsedhours()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsedhours', []);

        return parent::getUsedhours();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateusedhour($dateusedhour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateusedhour', [$dateusedhour]);

        return parent::setDateusedhour($dateusedhour);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateusedhour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateusedhour', []);

        return parent::getDateusedhour();
    }

}
